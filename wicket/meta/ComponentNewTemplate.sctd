<%=fieldModifiers%> <%=variableTypeName%> <%=lowerClassName%>;
<%=getModifiers%> <%=variableTypeName%> new<%=upperClassName%>(boolean doInit<%=nextConstructorDecls%>) {
<%=variableTypeName%> <%=lowerClassName%> = <% if (typeIsComponentClass) { %><%=typeClassName%>.new<%=typeBaseName%>(false<%=nextConstructorParams%>)<% } else { %>new <%=typeName%>(<%=constructorParams%>)<% } %>;
  <%=lowerClassName%>.preInit();
  <%=getDynamicTypeDefinition(lowerClassName, 1)%><%=propertyAssignments%>
  <% if (childrenNames != null && childrenNames.length() > 0) { %>
     java.util.List _children = java.util.Arrays.asList(<%=childrenNames%>);
  <% } %>
  if (doInit) {
     <%=lowerClassName%>.init();
     <%=lowerClassName%>.start();
  }
  <% if (childrenNames != null && childrenNames.length() > 0) { %>
     for (Object _child:_children) {
        if (_child instanceof org.apache.wicket.behavior.IBehavior)
           <%=lowerClassName%>.add((org.apache.wicket.behavior.IBehavior) _child);
     }
  <% } %>
  return <%=lowerClassName%>;
}

<%=getModifiers%> <%=variableTypeName%> new<%=upperClassName%>(<%=constructorDecls%>) { return new<%=upperClassName%>(true<%=nextConstructorParams%>); }
