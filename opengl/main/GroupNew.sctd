/** 
 * Snippet to be inserted for each object definition which extends the swing JComponent class
 * Accumulates the children objects and adds them.
 */
<%=fieldModifiers%> <%=variableTypeName%> <%=lowerClassName%>;
<%=getModifiers%> <%=variableTypeName%> new<%=upperClassName%>(boolean doInit<%=nextConstructorDecls%>) {
   <%=lowerClassName%> = <% if (typeIsComponentClass) { %><%=typeClassName%>.new<%=typeBaseName%>(false<%=nextConstructorParams%>)<% } else { %>new <%=typeName%>(<%=constructorParams%>)<% } %>;
  <%=lowerClassName%>.preInit();
  <%=getDynamicTypeDefinition(lowerClassName, 1)%><%=propertyAssignments%>
  java.util.List _children = java.util.Arrays.asList(<%=childrenNames%>);
  for (Object _child:_children) {
     if (_child instanceof sc.opengl.IRenderNode) {
        <%=lowerClassName%>.addChild((sc.opengl.IRenderNode) _child);
     }
  }
  if (doInit) {
    <%=lowerClassName%>.init();
    <%=lowerClassName%>.start();
  }
  return <%=lowerClassName%>;
}

<%=getModifiers%> <%=variableTypeName%> new<%=upperClassName%>(<%=constructorDecls%>) { return new<%=upperClassName%>(true<%=nextConstructorParams%>); }
